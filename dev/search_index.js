var documenterSearchIndex = {"docs":
[{"location":"iterative_solvers/contribution_guide/#Contribution-Guide-for-Abstract-Iterative-Solvers-1","page":"Contribution Guide","title":"Contribution Guide for Abstract Iterative Solvers","text":"","category":"section"},{"location":"iterative_solvers/contribution_guide/#","page":"Contribution Guide","title":"Contribution Guide","text":"An abstract iterative solver needs one struct, one constructor, and two functions (initialize! and doiteration!). In order to interface with the rest of CliMa. In what follows we will describe in detail the function signatures, return values, and struct properties necessary to build with CliMA.","category":"page"},{"location":"iterative_solvers/contribution_guide/#","page":"Contribution Guide","title":"Contribution Guide","text":"We will illustrate the method by defining a new struct","category":"page"},{"location":"iterative_solvers/contribution_guide/#Struct-1","page":"Contribution Guide","title":"Struct","text":"","category":"section"},{"location":"iterative_solvers/contribution_guide/#","page":"Contribution Guide","title":"Contribution Guide","text":"A struct needs at least two members","category":"page"},{"location":"iterative_solvers/contribution_guide/#","page":"Contribution Guide","title":"Contribution Guide","text":"struct MyIterativeMethod{FT}\n  atol::FT\n  rtol::FT\nend","category":"page"},{"location":"iterative_solvers/contribution_guide/#Initialize-Function-1","page":"Contribution Guide","title":"Initialize Function","text":"","category":"section"},{"location":"iterative_solvers/contribution_guide/#","page":"Contribution Guide","title":"Contribution Guide","text":"The initialize function needs the following signature","category":"page"},{"location":"iterative_solvers/contribution_guide/#","page":"Contribution Guide","title":"Contribution Guide","text":"initialize!(Q, Qrhs, args...)","category":"page"},{"location":"iterative_solvers/contribution_guide/#","page":"Contribution Guide","title":"Contribution Guide","text":"An example implementation (that does nothing) would be","category":"page"},{"location":"iterative_solvers/contribution_guide/#","page":"Contribution Guide","title":"Contribution Guide","text":"initialize!(::MyIterativeMethod)","category":"page"},{"location":"#TrialDocs-1","page":"Home","title":"TrialDocs","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"A Julia Repo for Creating Documentation","category":"page"},{"location":"#More-Info-1","page":"Home","title":"More Info","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Just testing subsections","category":"page"}]
}
