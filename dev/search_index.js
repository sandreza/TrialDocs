var documenterSearchIndex = {"docs":
[{"location":"time_steppers/contribution_guide/#Contribution-Guide-for-Abstract-Time-Steppers-1","page":"Time Stepping","title":"Contribution Guide for Abstract Time Steppers","text":"","category":"section"},{"location":"time_steppers/contribution_guide/#","page":"Time Stepping","title":"Time Stepping","text":"The main method that we have for time-stepping are Runge-Kutta methods. Of the kinds of Runge-Kutta methods we have Implicit-Explicit methods as well as multi-rate methods.","category":"page"},{"location":"time_steppers/contribution_guide/#Function-1","page":"Time Stepping","title":"Function","text":"","category":"section"},{"location":"time_steppers/contribution_guide/#","page":"Time Stepping","title":"Time Stepping","text":"Testing","category":"page"},{"location":"time_steppers/contribution_guide/#","page":"Time Stepping","title":"Time Stepping","text":"solve!(Q, method, dt = dt, linear_solver = whatever)","category":"page"},{"location":"iterative_solvers/contribution_guide/#Contribution-Guide-for-Abstract-Iterative-Solvers-1","page":"Iterative Solvers","title":"Contribution Guide for Abstract Iterative Solvers","text":"","category":"section"},{"location":"iterative_solvers/contribution_guide/#","page":"Iterative Solvers","title":"Iterative Solvers","text":"An abstract iterative solver needs one struct, one constructor, and two functions (initialize! and doiteration!). In order to interface with the rest of CliMa. In what follows we will describe in detail the function signatures, return values, and struct properties necessary to build with CliMA.","category":"page"},{"location":"iterative_solvers/contribution_guide/#","page":"Iterative Solvers","title":"Iterative Solvers","text":"We will illustrate the method by defining a new struct","category":"page"},{"location":"iterative_solvers/contribution_guide/#Struct-1","page":"Iterative Solvers","title":"Struct","text":"","category":"section"},{"location":"iterative_solvers/contribution_guide/#","page":"Iterative Solvers","title":"Iterative Solvers","text":"A struct needs at least two members","category":"page"},{"location":"iterative_solvers/contribution_guide/#","page":"Iterative Solvers","title":"Iterative Solvers","text":"struct MyIterativeMethod{FT}\n  atol::FT\n  rtol::FT\nend","category":"page"},{"location":"iterative_solvers/contribution_guide/#Initialize-Function-1","page":"Iterative Solvers","title":"Initialize Function","text":"","category":"section"},{"location":"iterative_solvers/contribution_guide/#","page":"Iterative Solvers","title":"Iterative Solvers","text":"The initialize function needs the following signature","category":"page"},{"location":"iterative_solvers/contribution_guide/#","page":"Iterative Solvers","title":"Iterative Solvers","text":"initialize!(Q, Qrhs, args...)","category":"page"},{"location":"iterative_solvers/contribution_guide/#","page":"Iterative Solvers","title":"Iterative Solvers","text":"An example implementation (that does nothing) would be","category":"page"},{"location":"iterative_solvers/contribution_guide/#","page":"Iterative Solvers","title":"Iterative Solvers","text":"initialize!(::MyIterativeMethod)","category":"page"},{"location":"iterative_solvers/contribution_guide/#Iteration-Function-1","page":"Iterative Solvers","title":"Iteration Function","text":"","category":"section"},{"location":"iterative_solvers/contribution_guide/#","page":"Iterative Solvers","title":"Iterative Solvers","text":"The iteration function needs the following signature","category":"page"},{"location":"iterative_solvers/contribution_guide/#","page":"Iterative Solvers","title":"Iterative Solvers","text":"doiteration!(Q, Qrhs, args...)","category":"page"},{"location":"iterative_solvers/contribution_guide/#","page":"Iterative Solvers","title":"Iterative Solvers","text":"An example implementation (that does nothing) would be","category":"page"},{"location":"iterative_solvers/contribution_guide/#","page":"Iterative Solvers","title":"Iterative Solvers","text":"doiteration!(::MyIterativeMethod)","category":"page"},{"location":"iterative_solvers/contribution_guide/#CliMa-Specific-Considerations-1","page":"Iterative Solvers","title":"CliMa Specific Considerations","text":"","category":"section"},{"location":"iterative_solvers/contribution_guide/#","page":"Iterative Solvers","title":"Iterative Solvers","text":"Don't take up too much memory. By default a 3D MPI State Array has the following structure ... ,","category":"page"},{"location":"iterative_solvers/contribution_guide/#Preconditioners-1","page":"Iterative Solvers","title":"Preconditioners","text":"","category":"section"},{"location":"iterative_solvers/contribution_guide/#","page":"Iterative Solvers","title":"Iterative Solvers","text":"TO DO","category":"page"},{"location":"iterative_solvers/contribution_guide/#Writing-Tests-1","page":"Iterative Solvers","title":"Writing Tests","text":"","category":"section"},{"location":"iterative_solvers/contribution_guide/#","page":"Iterative Solvers","title":"Iterative Solvers","text":"Test on small systems where answers can be checked analytically. Check with matrices with easily computable inverses, i.e., the identity matrix or a diagonal matrix. Test with Diverse matrix structures","category":"page"},{"location":"iterative_solvers/contribution_guide/#Performance-Checks-1","page":"Iterative Solvers","title":"Performance Checks","text":"","category":"section"},{"location":"iterative_solvers/contribution_guide/#","page":"Iterative Solvers","title":"Iterative Solvers","text":"Timing performance can be done with general GPU guidelines","category":"page"},{"location":"function_index/#List-of-functions-in-TrialDocs-module-1","page":"Function Index","title":"List of functions in TrialDocs module","text":"","category":"section"},{"location":"function_index/#","page":"Function Index","title":"Function Index","text":"Modules = [TrialDocs]","category":"page"},{"location":"function_index/#TrialDocs.domath-Tuple{Number}","page":"Function Index","title":"TrialDocs.domath","text":"domath(x::Number)\n\nReturn x + 5.\n\n\n\n\n\n","category":"method"},{"location":"function_index/#TrialDocs.hello-Tuple{String}","page":"Function Index","title":"TrialDocs.hello","text":"hello(who::String)\n\nReturn \"Hello, who\".\n\n\n\n\n\n","category":"method"},{"location":"function_index/#TrialDocs.test_args-Tuple","page":"Function Index","title":"TrialDocs.test_args","text":"test_args(args...)\n\nDescription\n\nTesting to see if I can create documentation from a different folder\n\nArguments\n\nargs...: (arbitrary as long as it works with println).\n\nReturn\n\nNothing\n\nAdditional details\n\n\n\n\n\n","category":"method"},{"location":"function_index/#TrialDocs.test_args_kw-Tuple","page":"Function Index","title":"TrialDocs.test_args_kw","text":"testargskw(args..., keyword = \"keyword\")\n\nDescription\n\nTesting to see if I can create documentation from a different folder\n\nArguments\n\nargs...: (arbitrary as long as it works with println).\n\nKeyword Arguments\n\nkeyword: default = \"keyword\"\n\nReturn\n\nNothing\n\nAdditional details\n\nJust another test\n\n\n\n\n\n","category":"method"},{"location":"#TrialDocs-1","page":"Home","title":"TrialDocs","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"A Julia Repo for Creating Documentation","category":"page"},{"location":"#More-Info-1","page":"Home","title":"More Info","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Just testing subsections","category":"page"},{"location":"#So-far-we-have-1","page":"Home","title":"So far we have","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Contribution Guide for Abstract Iterative Solvers","category":"page"}]
}
